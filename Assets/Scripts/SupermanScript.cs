using System.Collections;
using System.Collections.Generic;
using UnityEngine;


//TODO
//Скрипт Superman
//Что нужно сделать
//Создайте скрипт Superman, который при столкновении (OnCollisionEnter) проверяет,
//с чем столкнулся наш объект и есть ли у него rigidbody. При наличии — он наносит удар из центра Супермена в центр объекта.
//Сделайте силу настраиваемой из инспектора.
//Создайте набор из слоёв Superman, GoodBoy, BadGuy. Супермен должен проходить сквозь хороших парней (GoodBoy)
//и наносить урон плохим (BadGuy).

//Сцена с имитацией бильярдного стола
//Что нужно сделать
//Создайте сцену с имитацией бильярдного стола и лунок по углам и посередине длинных сторон. Референс.
//Расположите на столе один главный шар (биток). При старте сцены скрипт должен запускаться на нём и задавать импульс
//по прямой вдоль плоскости стола.
//Расположите шары с rigidbody и без скриптов так, чтобы при ударе друг об друга в лунки закатилось минимум четыре шара или больше.


//Сфера невесомости
//Что нужно сделать
//Создайте сферу невесомости из полупрозрачного материала. Добавьте сферический триггер и скрипт,
//который отключает гравитацию твёрдого тела, попавшего в сферу. При выходе из триггера телу должна возвращаться гравитация.
//Проверьте работоспособность сферы — перемещайте её в окне сцены либо создайте движение с помощью скрипта из предыдущего модуля.
//Создайте трубу, составив несколько коллайдеров по кругу. Внизу трубы разместите эпицентр взрыва, а внутри неё — разные по форме,
//массе и материалам объекты. Сделайте минимум четыре разных материала с разным bounce, от максимального до нулевого,
//и таким же разбросом по силе трения. 
//Посмотрите, как работает сфера невесомости, если расположить её внутри трубы.


//Вопросы
//
//

public class SupermanScript : MonoBehaviour
{    
    public float force;
   
    private void OnTriggerEnter(Collider other)
    {
        Rigidbody rb = other.GetComponent<Rigidbody>();
        GameObject cube = other.gameObject;
        if (rb != null)
        {
            Debug.Log(cube.name + " Вошел");
            var enemyLayer = LayerMask.NameToLayer("EnemyLayer");
            if (cube.layer == enemyLayer)
            {
                var normal = Vector3.Normalize(cube.transform.position - transform.position);
                rb.AddForce(normal * force, ForceMode.Impulse);
            }            
        }
    }

    private void OnTriggerExit(Collider other)
    {
        Debug.Log(other.gameObject.name + " Вышел");

    }    
}
